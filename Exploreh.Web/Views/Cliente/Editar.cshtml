@using System.Web.Mvc.Html
@model Exploreh.Model.Cliente.ClienteModel

<style>
    .input-fields {
        margin: 10px;
    }
</style>

@{
    ViewBag.Title = "Alterar Cliente";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="content">
        <div class="row">
            <div class="col-lg-12">
                <div class="alert alert-warning">
                    <strong>Atenção!</strong> Os campos destacados com o asterísco (<b style="color: red">*</b>) são campos obrigatórios.
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="hpanel">
                    <div class="panel-heading">
                        Cliente Dados Principais
                    </div>
                    <div class="panel-body">
                        <div class="input-group input-fields">
                            <div class="radio radio-info radio-inline">
                                @Html.RadioButtonFor(m => m.TipoPessoa, "F", new {@class = "radio", id = "rpf"})
                                <label for="rpf"> Pessoa física </label>
                            </div>
                            <div class="radio radio-info radio-inline">
                                @Html.RadioButtonFor(m => m.TipoPessoa, "J", new {@class = "radio", id = "rpj"})
                                <label for="rpj"> Pessoa jurídica </label>
                            </div>
                            <div class="radio radio-info radio-inline">
                                @Html.RadioButtonFor(m => m.TipoPessoa, "E", new {@class = "radio", id = "restr"})
                                <label for="restr"> Estrangeiro </label>
                            </div>
                        </div>
                        <div class="input-group input-fields">
                            <span class="input-group-addon lblNome">Nome <span style="color: red">*</span></span>
                            <input id="Nome" type="text" class="form-control txtNome" name="Nome" placeholder="Nome do usuário" value="@Model.Nome">
                            <div style="color: red;">
                                <b> @Html.ValidationMessageFor(item => item.Nome)</b>
                            </div>
                        </div>
                        <div class="input-group input-fields">
                            <span id="DocLabel" class="input-group-addon">Documento</span>
                            <input type="text" class="form-control" name="Documento" placeholder="Número do documento" value="@Model.Documento">
                        </div>

                        <div class="input-group input-fields camposPF">
                            <span class="input-group-addon">Sexo</span>
                            <select class="form-control m-b" id="sexo" name="Sexo">
                                <option value="M" @(Model.Sexo == "M" ? "selected" : "")>Masculino</option>
                                <option value="F" @(Model.Sexo == "F" ? "selected" : "")>Feminino</option>
                                <option value="N" @(Model.Sexo == "N" ? "selected" : "")>Não declarado</option>
                            </select>
                        </div>

                        <div class="input-group input-fields camposPF">
                            <span class="input-group-addon">Data de nascimento</span>
                            <input id="DataNascimento" type="text" class="form-control" name="DataNascimento" placeholder="Data de nascimento" value="@Model.DataNascimento" data-mask="00/00/0000"/>
                        </div>
                        <div class="input-group input-fields camposPF">
                            <span class="input-group-addon">Ocupação</span>
                            <input id="Ocupacao" type="text" class="form-control" name="Ocupacao" placeholder="Ocupação" value="@Model.Ocupacao">
                        </div>
                        <div class="input-group input-fields">
                            <span class="input-group-addon">E-mail <span style="color: red">*</span></span>
                            <input id="Email" type="text" class="form-control" name="Email" placeholder="E-mail" value="@Model.Email">
                            <div style="color: red">
                                <b> @Html.ValidationMessageFor(item => item.Email)</b>
                            </div>
                        </div>
                        <div class="input-group input-fields">
                            <span class="input-group-addon">Observações</span>
                            <textarea id="HomePage" type="text" class="form-control" name="HomePage" placeholder="Observações" style="height:100px;resize: none">@Model.HomePage</textarea>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <div class="content animate-panel">
        <div class="row">
            <div class="col-lg-12">
                <div class="hpanel">
                    <div class="panel-heading">Cliente Telefones</div>
                    
                    <div class="input-group">
                        <div class="alert alert-warning">
                            <strong><b style="color: red">Atenção!</b></strong> É obrigatório o preenchimento de ao menos um <b style="color: red"> DDD + Telefone</b> abaixo.
                        </div>
                    </div>

                    @{
                        var i = 0;
                        foreach (var telefone in Model.ClienteTelefone)
                        {
                            if (Model.TipoPessoa == "E")
                            {
                                <div class="panel-body clienteTelefones">
                                    <div style="padding-bottom: 10px;">
                                        <input type="hidden" class="flgDelete" id="ClienteTelefone[@i]_flgDelete" name="ClienteTelefone[@i].flgDelete" value="false"/>
                                        <span class="pull-right clickableTelefone" data-effect="fadeOut"><i class="fa fa-times"></i></span>
                                    </div>
                                    <div class="input-group input-fields">
                                        <span class="input-group-addon">DDD</span>
                                        <input id="ClienteTelefone[@i]_Ddd" type="text" class="form-control" name="ClienteTelefone[@i].Ddd" placeholder="DDD" value="@telefone.Ddd">
                                    </div>
                                    <div class="input-group input-fields">
                                        <span class="input-group-addon">Telefone</span>
                                        <input id="ClienteTelefone[@i]_Telefone" type="text" class="form-control" name="ClienteTelefone[@i].Telefone" placeholder="Telefone" value="@telefone.Telefone">
                                        <input type="hidden" id="ClienteTelefone[@i]_Id" name="ClienteTelefone[@i].Id" value="@telefone.Id"/>
                                        <input type="hidden" id="ClienteTelefone[@i]_ClienteId" name="ClienteTelefone[@i].ClienteId" value="@telefone.ClienteId"/>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="panel-body clienteTelefones">
                                    <div style="padding-bottom: 10px;">
                                        <input type="hidden" class="flgDelete" id="ClienteTelefone[@i]_flgDelete" name="ClienteTelefone[@i].flgDelete" value="false"/>
                                        <span class="pull-right clickableTelefone" data-effect="fadeOut"><i class="fa fa-times"></i></span>
                                    </div>
                                    <div class="input-group input-fields">
                                        <span class="input-group-addon">DDD</span>
                                        <input id="ClienteTelefone[@i]_Ddd" type="text" class="form-control ddd" name="ClienteTelefone[@i].Ddd" placeholder="DDD" value="@telefone.Ddd">
                                    </div>
                                    <div class="input-group input-fields">
                                        <span class="input-group-addon">Telefone</span>
                                        <input id="ClienteTelefone[@i]_Telefone" type="text" class="form-control telefone" name="ClienteTelefone[@i].Telefone" placeholder="Telefone" value="@telefone.Telefone">
                                        <input type="hidden" id="ClienteTelefone[@i]_Id" name="ClienteTelefone[@i].Id" value="@telefone.Id"/>
                                        <input type="hidden" id="ClienteTelefone[@i]_ClienteId" name="ClienteTelefone[@i].ClienteId" value="@telefone.ClienteId"/>
                                    </div>
                                </div>
                            }
                            i++;
                        }
                    }

                </div>

            </div>
        </div>
    </div>


    <div class="content animate-panel">
        <div class="row">
            <div class="col-lg-12">
                <div class="hpanel">
                    <div class="panel-heading">

                        Cliente Endereço
                    </div>
                    <div class="panel-body">
                        @foreach (var endereco in Model.ClienteEndereco)
                        {
                            <input type="hidden" id="ClienteEndereco[0]_Id" name="ClienteEndereco[0].Id" value="@endereco.Id" />
                            <div class="input-group input-fields camposPfPj">
                                <span class="input-group-addon">CEP</span>
                                <input id="ClienteEndereco[0]_CEP" type="text" class="form-control cep" name="ClienteEndereco[0].CEP" placeholder="Digite o CEP para carregar os demais campos" value="@endereco.CEP">
                            </div>
                            <div class="input-group input-fields">
                                <span class="input-group-addon labelLogra">Logradouro</span>
                                <input id="ClienteEndereco[0]_Logradouro" type="text" class="form-control logradouro" name="ClienteEndereco[0].Logradouro" placeholder="Lograduro" value="@endereco.Logradouro">
                            </div>
                            <div class="input-group input-fields camposPfPj">
                                <span class="input-group-addon">Número</span>
                                <input id="ClienteEndereco[0]_Numero" type="text" class="form-control numero" name="ClienteEndereco[0].Numero" placeholder="Número" value="@endereco.Numero">
                            </div>
                            <div class="input-group input-fields">
                                <span class="input-group-addon labelComp">Complemento</span>
                                <input id="ClienteEndereco[0]_Complemento" type="text" class="form-control complemento" name="ClienteEndereco[0].Complemento" placeholder="Complemento" value="@endereco.Complemento">
                            </div>
                            <div class="input-group input-fields">
                                <span class="input-group-addon labelBairro">Bairro</span>
                                <input id="ClienteEndereco[0]_Bairro" type="text" class="form-control bairro" name="ClienteEndereco[0].Bairro" placeholder="Bairro" value="@endereco.Bairro">
                            </div>
                            <div class="input-group input-fields camposEstr">
                                <span class="input-group-addon">País</span>
                                <select id="ClienteEndereco[0]_Pais" class="form-control pais"></select>
                            </div>
                            <div class="input-group input-fields">
                                <span class="input-group-addon">Estado</span>
                                <select id="ClienteEndereco[0]_Estado" class="form-control estado"></select>
                            </div>
                            <div class="input-group input-fields">
                                <span class="input-group-addon">Cidade</span>
                                <select id="ClienteEndereco[0]_IdCidade" name="ClienteEndereco[0].IdCidade" class="form-control cidade"></select>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="content animate-panel">
        <div class="row">
            <div class="col-lg-12">
                <div class="hpanel">
                    <div class="panel-heading">Cliente Contatos</div>
                    <div id="ContatosParent">
                        <div class="panel-body contatosCampos" style="display:none;">
                            <div style="padding-bottom: 10px;">
                                <input type="hidden" class="flgDelete" name="ContatoFlgDelete" value="false" />
                                <span class="pull-right clickable" data-effect="fadeOut"><i class="fa fa-times"></i></span>
                            </div>
                            <div class="input-group input-fields">
                                <span class="input-group-addon">Nome</span>
                                <input id="ContatoNome" type="text" class="form-control" name="ContatoNome" placeholder="Nome" value="">
                            </div>
                            <div class="input-group input-fields">
                                <span class="input-group-addon">Email</span>
                                <input id="ContatoEmail" type="text" class="form-control" name="ContatoEmail" placeholder="Email" value="">
                                <input type="hidden" name="ContatoId" value="@Model.Id" />
                            </div>
                        </div>
                        @foreach (var contato in Model.ClienteContato)
                        {
                            <div class="panel-body contatosCampos">
                                <div style="padding-bottom: 10px;">
                                    <input type="hidden" class="flgDelete" name="ContatoFlgDelete" value="false" />
                                    <span class="pull-right clickable" data-effect="fadeOut"><i class="fa fa-times"></i></span>
                                </div>
                                <div class="input-group input-fields">
                                    <span class="input-group-addon">Nome</span>
                                    <input id="ContatoNome" type="text" class="form-control" name="ContatoNome" placeholder="Nome" value="@contato.Nome">
                                </div>
                                <div class="input-group input-fields">
                                    <span class="input-group-addon">Email</span>
                                    <input id="ContatoEmail" type="text" class="form-control" name="ContatoEmail" placeholder="Email" value="@contato.Email">
                                    <input type="hidden" name="ContatoId" value="@contato.Id" />
                                </div>
                            </div>
                        }

                    </div>
                    <a style="margin: 10px 0;" href="javascript:addRow();">+1 Contato</a>
                </div>
            </div>
        </div>
    </div>

    <div class="input-fields">
        <button type="submit" class="btn w-xs btn-primary btnSalvar"> <i class="fa fa-check"></i> Salvar </button>
    </div>
    <div class="input-fields">
        <button onclick="location.href='@Url.Action("Lista", "Cliente")'" class="btn w-xs btn-danger"> <i class="glyphicon glyphicon-chevron-left"></i> Voltar </button>
    </div>

                        }

@section Styles {
    @Styles.Render("~/bundles/bootstrapCheckbox/css")
    @Styles.Render("~/bundles/sweetAlert/css")

}


@Scripts.Render("~/bundles/jquery/js")
@Scripts.Render("~/bundles/homer/js")
@Scripts.Render("~/bundles/sweetAlert/js")

<script src="~/Scripts/BuscaCep.js"></script>
<script src="~/Scripts/Mask/jquery.mask.min.js"></script>

<script type="text/javascript">
    function addFechar(){
        $('.clickable').on('click',function(){
            var effect = $(this).data('effect');
            $(this).closest('.contatosCampos')[effect]();
            $(this).closest('.contatosCampos').find('.flgDelete').val('true');
        });
        $('.clickableTelefone').on('click',function(){
            var effect = $(this).data('effect');
            $(this).closest('.clienteTelefones')[effect]();
            $(this).closest('.clienteTelefones').find('.flgDelete').val('true');
        });
    }
    $(document).ready(function () {

        addFechar();
        $('.clickableTelefone:first').hide()

        exibeCampos("@Model.TipoPessoa");

        carregaPais(@Model.ClienteEndereco[0].IdPais,@Model.ClienteEndereco[0].IdEstado,@Model.ClienteEndereco[0].IdCidade);

        $('.estado').change(function () {
            carregaCidades($(this));
        });

        $('.pais').change(function () {
            carregaEstados($(this).val());
        });

        $("#Cidade").change(function (evt) {
            $('#CidadeId').val($(this).val());

        });

        $('.cep').focusout(function () {
            $('.btnSalvar').attr("disabled", true);
            var result = BuscaCepEdit('@Url.Action("GetCep","Cliente")',$(this).val());
            
            if (result.DcrTipoLogradouro != null) {
                $('.logradouro').val(result.DcrTipoLogradouro + ' ' + result.DcrNome);
            }
            $('.bairro').val(result.Bairro.DcrNome);
            $('.pais').val(result.Pais.IdPais);

            carregaEstados(result.Pais.IdPais, result.UnidadeFederacao.IdUnidadeFederacao, result.Cidade.IdCidade);
            $('.btnSalvar').attr("disabled", false);
        });

    });

    function exibeCampos(tipoPessoa) {
        if (tipoPessoa == "F") {
            $("#DocLabel").html("CPF");
            $(".labelNome").html("Nome");
            $(".txtNome").attr("placeholder", "Nome do cliente").blur();
            $(".labelLogra").html("Logradouro");
            $(".logradouro").attr("placeholder", "Logradouro").blur();
            $(".labelComp").html("Complemento");
            $(".complemento").attr("placeholder", "Complemento").blur();
            $(".labelBairro").html("Bairro");
            $(".bairro").attr("placeholder", "Bairro").blur();
            $(".camposPF").show();
            $(".camposPfPj").show();
        } else if(tipoPessoa == "J") {
            $("#DocLabel").html("CNPJ");
            $(".labelNome").html("Razão Social");
            $(".txtNome").attr("placeholder", "Razão social").blur();
            $(".labelLogra").html("Logradouro");
            $(".logradouro").attr("placeholder", "Logradouro").blur();
            $(".labelComp").html("Complemento");
            $(".complemento").attr("placeholder", "Complemento").blur();
            $(".labelBairro").html("Bairro");
            $(".bairro").attr("placeholder", "Bairro").blur();
            $("#sexo").val('N');
            $(".camposPF").hide();
            $(".camposPfPj").show();
        } else if (tipoPessoa == "E") {
            $("#DocLabel").html("Passaporte");
            $(".labelNome").html("Nome");
            $(".txtNome").attr("placeholder", "Nome do cliente").blur();
            $(".logradouro").attr("placeholder", "Linha 1").blur();
            $(".labelLogra").html("Linha 1");
            $(".labelComp").html("Linha 2");
            $(".complemento").attr("placeholder", "Linha 2").blur();
            $(".labelBairro").html("Linha 3");
            $(".bairro").attr("placeholder", "Linha 3").blur();
            $(".camposPF").show();
            $(".camposPfPj").hide();
        }
    }

    function carregaCidades(estado,id) {

        var comboEstado = estado;
        var comboCidade = $('.cidade');

        if (comboEstado != "-1") {

            $.ajax({
                url: '@Url.Action("GetCidade","Cliente")',
                type: 'POST',
                data: { id: comboEstado.val() },
                success: function (cidades) {
                    comboCidade.empty();
                    var $select = comboCidade;
                    $select.append('<option value="0">--- Selecione a Cidade ---</option>');
                    $.each(cidades, function (i, cidade) {
                        $select.append(
                            $('<option/>')
                            .attr('value', cidade.IdCidade)
                            .text(cidade.DcrNome)
                        );
                    });
                    if (id != null) {
                        comboCidade.val(id);
                    }
                },
                error: function (xhr) { }
            });
        }


    }

    function carregaEstados(idPais,idEstado,idCidade) {
        var comboEstado = $('.estado');
        $.ajax({
            url: '@Url.Action("GetEstado","Cliente")',
            type: 'POST',
            data: { idPais: idPais },
            success: function (estados) {
                comboEstado.empty();
                var $select = comboEstado;
                $select.append('<option value="0">--- Selecione o Estado ---</option>');
                $.each(estados, function (i, estado) {
                    $select.append(
                        $('<option/>')
                        .attr('value', estado.IdUnidadeFederacao)
                        .text(estado.DcrSigla)
                    );
                });
                if (idEstado != null) {
                    comboEstado.val(idEstado);
                    carregaCidades(comboEstado, idCidade);
                }
            },
            error: function (xhr) { }
        });
    }

    function carregaPais(id,idEstado,idCidade) {
        var comboPais = $('.pais');

        $.ajax({
            url: '@Url.Action("GetPais","Cliente")',
            type: 'POST',
            //data: { id: comboEstado },
            success: function (paises) {
                comboPais.empty();
                var $select = comboPais;
                $select.append('<option value="0">--- Selecione o Pais ---</option>');
                $.each(paises, function (i, pais) {
                    $select.append(
                        $('<option/>')
                        .attr('value', pais.IdPais)
                        .text(pais.DcrNome)
                    );
                });
                if (id != null) {
                    comboPais.val(id);
                    if(idEstado != null && idCidade != null){
                        carregaEstados(id,idEstado,idCidade);
                    }
                }
            },
            error: function (xhr) { }
        });
    }

    // <![CDATA[
    function addRow() {
        //copy the table row and clear the value of the input, then append the row to the end of the table
        $(".contatosCampos:first")
            .clone()
            .show()
            .find("input")
            .each(function () {
                $(this).val('');
            })
            .end()
            .find(".clickable")
            .each(function () {
                $(this).show();
            })
            .end()
            .appendTo("#ContatosParent");
        addFechar();
    }
    $(".radio input[type='radio']").on('click', function () {
        if ($("#rpf").is(":checked")) {
            $("#DocLabel").html("CPF");
            $(".labelNome").html("Nome");
            $(".txtNome").attr("placeholder", "Nome do cliente").blur();
            $(".labelLogra").html("Logradouro");
            $(".logradouro").attr("placeholder", "Logradouro").blur();
            $(".labelComp").html("Complemento");
            $(".complemento").attr("placeholder", "Complemento").blur();
            $(".labelBairro").html("Bairro");
            $(".bairro").attr("placeholder", "Bairro").blur();
            $(".camposPF").show();
            $(".camposPfPj").show();
        } else if ($("#rpj").is(":checked")) {
            $("#DocLabel").html("CNPJ");
            $(".labelNome").html("Razão Social");
            $(".txtNome").attr("placeholder", "Razão social").blur();
            $(".labelLogra").html("Logradouro");
            $(".logradouro").attr("placeholder", "Logradouro").blur();
            $(".labelComp").html("Complemento");
            $(".complemento").attr("placeholder", "Complemento").blur();
            $(".labelBairro").html("Bairro");
            $(".bairro").attr("placeholder", "Bairro").blur();
            $("#sexo").val('N');
            $(".camposPF").hide();
            $(".camposPfPj").show();
        } else if ($("#restr").is(":checked")) {
            $("#DocLabel").html("Passaporte");
            $(".labelNome").html("Nome");
            $(".txtNome").attr("placeholder", "Nome do cliente").blur();
            $(".logradouro").attr("placeholder", "Linha 1").blur();
            $(".labelLogra").html("Linha 1");
            $(".labelComp").html("Linha 2");
            $(".complemento").attr("placeholder", "Linha 2").blur();
            $(".labelBairro").html("Linha 3");
            $(".bairro").attr("placeholder", "Linha 3").blur();
            $(".camposPF").show();
            $(".camposPfPj").hide();
        }
    });

    $('DataNascimento').mask('00/00/0000');
    $('.ddd').mask('(00)');

    var SPMaskBehavior = function (val) {
        return val.replace(/\D/g, '').length === 9 ? '00000-0000' : '0000-00009';
        },
        spOptions = {
            onKeyPress: function (val, e, field, options) {
                field.mask(SPMaskBehavior.apply({}, arguments), options);
            }
        };

    $('.telefone').mask(SPMaskBehavior, spOptions);

    $('#DataNascimento').focusout(function() {

        ValidaData($(this));
    });

    function ValidaData(obj)
    {
        var data = obj.val();
        var dia = data.substring(0, 2);
        var mes = data.substring(3, 5);
        var ano = data.substring(6, 10);
 
        var novaData = new Date(ano,(mes-1),dia);
 
        var mesmoDia = parseInt(dia,10) == parseInt(novaData.getDate());
        var mesmoMes = parseInt(mes,10) == parseInt(novaData.getMonth())+1;
        var mesmoAno = parseInt(ano) == parseInt(novaData.getFullYear());
 
        if (!((mesmoDia) && (mesmoMes) && (mesmoAno)))
        {
            swal({
                title: "Ops!",
                text: "Esta data é inválida",
                type: "warning"
            }, function () {
                obj.val('');
            });
            
            return false;
        }  
        return true;
    }
</script>
